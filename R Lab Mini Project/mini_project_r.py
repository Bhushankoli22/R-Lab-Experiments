# -*- coding: utf-8 -*-
"""Mini_Project_R.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iloa-d_lEubQFkCx_tvy5mplgf29FtRB
"""

#1. Reading dataset values in data variable.
id <- "1iGks3HPVlJG19ecUr010fe2hya1O0PBh" # google file ID
data <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id), na.strings=c("","NA"))

#Task 1: Bhushan Koli
# a. summarize the entire data using apropriate R Command.
library(dplyr)
summary(data)

# b. show class of variable holding data
class(data)

# c. Obtain 5 point statistical summary for all attributes
paste('Min.Lower.Medain.Upper.Max')
fivenum(data$age)
fivenum(data$sex)
fivenum(data$cp)
fivenum(data$trestbps)
fivenum(data$chol)
fivenum(data$fbs)
fivenum(data$restecg)
fivenum(data$thalach)
fivenum(data$exang)
fivenum(data$oldpeak)
fivenum(data$slope)
fivenum(data$ca)
fivenum(data$thal)
fivenum(data$target)

# d. select any 2 atributes that are continuous valued and create a subset of original data with only those columns. 
# (e.g. sample_data(col1,col2, col3) is stored in variable my_data where as variable data_slice has only col2 and col3 and no other columns. 
# Num of rows in both must be same.)
data_slice <- data %>% select(age:fbs)
summary(data_slice)

# e. Write R function to sample tuples starting at index N to N+m from any data set provided.
bb <- data['age']
sample(bb[1:10,])

# Task 2 : Swaraj Kondelkar
# a. find out how many values are missing in each of the columns of your data set.
tar <- data$target
sapply(data, function(tar) sum(is.na(tar)))

# b. select colum with more than 10% values missing for deletation. Create new copy of dataset
# that has one less column call it sample_data_1less.

## Remove columns with more than 10% NA
dataless1 <-data[, which(colMeans(!is.na(data)) > 0.1)]

# c. Find 5 point summary of all remaining columns with numric attributes
summary(dataless1)

# d. For attribute having maximum spread delete all tuples that have value less than the mean of the
# attribute selected. Count the number of tuples reamining in the sampled dataset.

m <- mean(data$trestbps, na.rm = "FALSE")
m

df2 <- subset(data, data$trestbps< m)
summary(df2$trestbps)
print('Rows before row deletion: ')
nrow(data)
print('Rows before row deletion: ')
nrow(df2)

#Task Number 3: Ishwari Khismatrao
# a. print the 5 point statistical summary for any 2 numeric attributes from your data set
fivenum(data$age) 
fivenum(data$chol)

# b. select 2 atributes have closest mean value and draw a scatter plot with proper x and labelsloi
# ntt and title (for plotting you must use R library functions or gnuplot and not matplotlib )
means<- colMeans(data[sapply(data, is.numeric)] )
means

library(ggplot2)

oldpeak<-data$oldpeak
slope<-data$slope
plot(data$oldpeak , data$slope , main = "Scatterplot" , xlab = "oldpeak" , ylab = "slope" , las = 1 , xlim = c(0,2) , col = 2 )

# e. Write a R function to plot histogram of some specific input attribute for any data set provided
new.function <- function(oldpeak) {
   hist(oldpeak)
}

new.function(oldpeak)

# c. Find coefficient of correlation using some R library function between above 2 attributes
cor(oldpeak,slope, method = c("pearson", "kendall", "spearman"))

boxplot(oldpeak,slope)
title("oldpeak vs. slope")

boxplot(oldpeak~slope,data=data, main="Box Plot",xlab="Oldpeak", ylab="Slope")